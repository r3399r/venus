AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: wedding deployment cloudformation script
Globals:
  Function:
    Timeout: 30
Parameters:
  LambdaExecutionRole:
    Type: String
    Default: celestial-service-execution-role
    Description: The primary role in that gives the Lambda function permission to
      do its work.
  NodeJsVer:
    Type: String
    Default: nodejs14.x
  Project:
    Type: String
  TargetEnvr:
    Type: String
    Description: The target environment for API Gateway deployment.
Resources:
  ServerlessApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Fn::Sub: ${TargetEnvr}
      EndpointConfiguration: REGIONAL
      DefinitionBody:
        openapi: 3.0.1
        info:
          version: '2020-01-06T07:45:41Z'
          title:
            Fn::Sub: ${Project}-${TargetEnvr}-api
        paths:
          /chat:
            post:
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              x-amazon-apigateway-integration:
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:278497686406:function:${Project}-${TargetEnvr}-chat/invocations
                responses:
                  default:
                    statusCode: '200'
                passthroughBehavior: when_no_match
                httpMethod: POST
                contentHandling: CONVERT_TO_TEXT
                type: aws
        definitions:
          Empty:
            type: object
            title: Empty Schema
  LambdaChat:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
      - arm64
      Handler: index.chat
      Runtime:
        Fn::Sub: ${NodeJsVer}
      FunctionName:
        Fn::Sub: ${Project}-${TargetEnvr}-chat
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${LambdaExecutionRole}
      CodeUri: s3://y-cf-midway-singapore/0d2398da259ece0a4f80842e2ca77d00
      MemorySize: 128
      Environment:
        Variables:
          PROJECT:
            Fn::Sub: ${Project}
          DB_CLUSTER:
            Fn::Sub: '{{resolve:ssm:${TargetEnvr}-db-cluster:1}}'
          DB_HOST:
            Fn::Sub: '{{resolve:ssm:${TargetEnvr}-db-host:1}}'
          DB_PWD:
            Fn::Sub: '{{resolve:ssm:${TargetEnvr}-db-pwd:1}}'
          DB_USER:
            Fn::Sub: '{{resolve:ssm:${TargetEnvr}-db-user:1}}'
          CHANNEL_TOKEN:
            Fn::Sub: '{{resolve:ssm:${Project}-${TargetEnvr}-token:1}}'
  InvokePermissionChat:
    Type: AWS::Lambda::Permission
    DependsOn:
    - ServerlessApi
    - LambdaChat
    Properties:
      FunctionName:
        Fn::Sub: ${Project}-${TargetEnvr}-chat
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ServerlessApi}/*
